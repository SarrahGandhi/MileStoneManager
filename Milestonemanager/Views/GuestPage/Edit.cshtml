@model Milestonemanager.Models.Guest

@{
    ViewData["Title"] = "Edit Guest";
    var eventList = ViewData["EventsList"] as List<Milestonemanager.Models.Event>;
}

<h2>Edit Guest</h2>

<form asp-action="EditGuest" method="post">
    <input type="hidden" asp-for="GuestId" />


    <div class="form-group">
        <label asp-for="GuestName" class="control-label"></label>
        <input asp-for="GuestName" class="form-control" />
        <span asp-validation-for="GuestName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="GuestLocation" class="control-label"></label>
        <input asp-for="GuestLocation" class="form-control" />
        <span asp-validation-for="GuestLocation" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="GuestPhone" class="control-label"></label>
        <input asp-for="GuestPhone" class="form-control" />
        <span asp-validation-for="GuestPhone" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="GuestCategory" class="control-label"></label>
        <input asp-for="GuestCategory" class="form-control" />
        <span asp-validation-for="GuestCategory" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="IsInvited" class="control-label"></label>
        <input asp-for="IsInvited" type="checkbox" />
        <span asp-validation-for="IsInvited" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="control-label">Events Attending</label>
        <div>
            @if (Model.EventGuests != null)
            {
                @for (int i = 0; i < Model.EventGuests.Count; i++)
                {
                    var eventItem = Model.EventGuests.ElementAt(i);
                    <div class="form-check">

                        <p>@eventList.FirstOrDefault(x => x.EventId == eventItem.EventId)?.EventName
                        </p>
                        <input type="hidden" id="@eventItem.EventId" name="EventGuests[@i].EventId"
                            value="@eventItem.EventId" />
                        <input type="hidden" id="@eventItem.GuestEventId" name="EventGuests[@i].GuestEventId"
                            value="@eventItem.GuestEventId" />




                        <div>
                            <label for="@eventItem.EventId">Men:</label>
                            <input type="number" id="@eventItem.EventId" name="EventGuests[@i].EventMen"
                                value="@eventItem.EventMen" min="0" />
                        </div>
                        <div>
                            <label for="@eventItem.EventId">Women:</label>
                            <input type="number" id="@eventItem.EventId" name="EventGuests[@i].EventWomen"
                                value="@eventItem.EventWomen" min="0" />
                        </div>
                        <div>
                            <label for="@eventItem.EventId">Kids:</label>
                            <input type="number" id="@eventItem.EventId" name="EventGuests[@i].EventKids"
                                value="@eventItem.EventKids" min="0" />
                        </div>
                    </div>
                }
            }
        </div>
    </div>



    <button type="submit" class="btn btn-primary">Save Changes</button>
    <a asp-action="ListGuest" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<style>
    /* Reuse the same body background */
    body {
        background: #EFE5DC;

    }

    /* Form Container using similar styling to table-container */
    .form-container {
        width: 100%;
        max-width: 600px;
        margin: 2rem auto;
        padding: 30px;
        border-radius: 31px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        background: linear-gradient(153deg, #FBFEFB 31.55%, #EFE5DC 98.87%);
    }

    /* Form element styling */
    .form-group {
        margin-bottom: 1.5rem;
    }

    .control-label {
        display: block;
        margin-bottom: 0.5rem;
        color: #000;
        font-weight: bold;
    }

    .form-control {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        background: rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        box-shadow: 0 0 0 2px rgba(176, 139, 111, 0.3);
        background: white;
    }

    /* Button styling matching the table actions */
    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: 0.3s;
        text-decoration: none;
        display: inline-block;
        text-align: center;
    }

    .btn-primary {
        background-color: #d9b497;
        color: white;
    }

    .btn-secondary {
        background-color: #B08B6F;
        color: white;
    }

    .btn:hover {
        background-color: #B08B6F;
        color: white;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.9rem;
        margin-top: 0.25rem;
    }

    h2 {
        color: #000;
        margin-bottom: 2rem;
        text-align: center;
    }
</style>